The JdeRobot-Academy framework for learning robotics is presented, whose infrastructure is based on the ROS middleware and Gazebo, using Python as a programming language for the infrastructure and robot logic. It is open source and multiplatform.

Following the philosophy of practical learning environments such as MATLAB and Tekkotsu, JdeRobot-Academy aims to bring the field of robotics closer to the university student, in a practical way and emphasized in the logic programming of the robot needed to address a specific robotic problem. The environment consists of a set of independent and attractive practices, according to applications that are recently reaching society (autonomous cars, mobile robots such as vacuum cleaners, drones, ...), each of which has three layers:

* In the lower layer is the robot that wants to perform some task in a certain environment, either simulated or real.
* In the intermediate layer there are the respective drivers that give software access to the sensors and actuators of the robot.
* The upper layer is the academic application that analyzes the sensory data and makes decisionsof action, planning if necessary. This application consists of an auxiliary functionality already programmed and the student's own code, who is hidden from the complexity of the infrastructure given the high level of difficulty in the programming of robots.

Regarding its design, it should be said that the practices do not focus on a specific robot, but cover different aspects of robotics with simulated versions and in some cases with real hardware including drones, Turtlebot with wheels, autonomous cars and humanoids inter alia. The academic application is connected to the real robot or simulated interchangeably, without the student having to make changes in the code, given the organization of the environment and its use of configuration files where the simulation characteristics or parameters of use of a real robot are specified.

As middleware, ROS has been chosen in its Kinetic version to resolve communications between sensors and actuators and the academic application, also making use of the relevant configuration files.

For each practice an academic application is created that contains a specific part already programmed that solves auxiliary tasks, and that also includes a single template file for the students to enter their code there, where the use of standard libraries in robotics such as OpenCV or PCL is encouraged. This academic application not only solves the graphic interface of the practice and the template for the student’s code, but also provides a programming interface to access that graphical interface debugging tools (GUI API) and another programming interface for accessing the sensors and actuators of the robot (HAL API) in the form of simple Python methods. In addition, it has a temporary skeleton based on a continuous loop of iterations in which sensory data are collected, then processed, then the way to act is decided and finally orders are sent to the actuators.

The environment presented is free software, downloadable from GitHub 1 . It is open to collaborations, extensions, modifications and its use is free in its entirety or in the parts that are needed. It has been used successfully in some degree subjects at Spanish universities (such as the URJC) and in postgraduate courses, as well as in several editions of the PROGRAM-A-ROBOT CHALLENGE 2 (IROS) championship. The installation of the environment is simple, having prepared binary packages for Ubuntu and Debian that include the drivers, the simulator and the academic applications of each of the practices. Although the environment was born for Linux, now it works correctly on MS-Windows and MacOS platforms through lightweight Docker containers and the Gazebo web interface (GzWeb-server).

JdeRobot-Academy currently uses ROS-Kinetic and Gazebo 7.0.0, but it is intended to adapt the infrastructure to work with ROS-Melodic and Gazebo 9.0.0 in the near future. The use of MAVROS nodes for drones is also being studied and incorporated into the project. In addition, the environment already has a functional first web version 3 , which is still in the process of development and enrichment, but which already has one of the practices of the framework.

With the presentation of this environment, it is intended that attendees can discover its utilities and usage possibilities for incorporating it to their work. Given its teaching purpose, the aim is –as well- to convey to listeners the educational idea on which JdeRobot-Academy is based, in order to enrich the robotic teaching with practical material. In addition, the intention also is to demonstrate the ease of integration of ROS middleware in robotic projects, emphasizing its power and usability. There will be a general presentation of the environment, going into some implementation details, enriched by specifying and describing some of the practices which the environment has, such as: car junction, global navigation, follow line and vacuum cleaner with SLAM.

We also have a YouTube channel 4 in which there is constantly added audiovisual content related to the work done by the developers, where you can also find demonstration videos of the execution of all practices. Videos for the four practices mentioned above can be found in [ 5 ], [ 6 ], [ 7 ] and [ 8 ].